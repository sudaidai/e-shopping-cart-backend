type Query {
    hello: String!

    cart(id: ID!, currency: CurrencyInput!): Cart
}

type Mutation {
    addToCart(
        productId: ID!
        quantity: Int!
    ): CartItem!

    clearCart: Boolean!

    updateCart(
        cartUpdates: [CartUpdateInput!]!
    ): [CartItem!]!
}

input CartUpdateInput {
    productId: ID
    cartItemId: Int
    quantity: Int
    action: CartUpdateAction!
}

enum CartUpdateAction {
    ADD
    UPDATE
    REMOVE
    CLEAR
}

type CartItemConnection {
    pageInfo: PageInfo!
    edges: [CartItemEdge!]!
}

type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: String
    endCursor: String
}

type CartItemEdge {
    cursor: String!
    node: CartItem!
}

type CartItem {
    id: Int!
    product: Product
    quantity: Int!
    itemPrice: String!
}

type Product {
    id: ID!
    name: String!
    price: String!
    description: String
}